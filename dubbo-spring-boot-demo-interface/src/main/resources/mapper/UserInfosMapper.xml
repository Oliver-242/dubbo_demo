<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dubbo.springboot.demo.mapper.UserInfosDao">
    <resultMap id="BaseResultMap" type="org.apache.dubbo.springboot.demo.model.entity.UserInfos">
        <id column="userid" property="userId" jdbcType="BIGINT"/>
        <result column="username" property="userName" jdbcType="VARCHAR"/>
        <result column="phonenumber" property="phoneNumber" jdbcType="CHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickName" jdbcType="VARCHAR"/>
        <result column="creditcardnum" property="creditCardNum" jdbcType="INTEGER"/>
        <result column="depositcardnum" property="depositCardNum" jdbcType="INTEGER"/>
        <result column="identification" property="identification" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
    </resultMap>

    <sql id="All_Column_List">
        userid, username, phonenumber, password, nickname, creditcardnum, depositcardnum, identification, status
    </sql>

    <insert id="createUserInfo" parameterType="org.apache.dubbo.springboot.demo.model.entity.UserInfos">
        insert into
            userinfos(username, phonenumber, password, nickname, identification, status)
        values
            (#{user.userName}, #{user.phoneNumber}, #{user.password}, #{user.nickName}, #{user.identification}, #{user.status})
    </insert>

    <select id="queryAllUserInfo" resultMap="BaseResultMap">
        select
        <include refid="All_Column_List"/>
        from userinfos
        where identification='user'
        order by userid
    </select>

    <select id="queryAllByPhoneNumber" resultMap="BaseResultMap">
        select
        <include refid="All_Column_List"/>
        from userinfos
        where phonenumber=#{phonenumber,jdbcType=CHAR}
        order by userid
    </select>

    <delete id="deleteUserByUserId">
        delete from userinfos
        where userid=#{userId}
    </delete>

    <update id="modStatusByUserId">
        update userinfos
        set status=#{status}
        where userid=#{userId}
    </update>

</mapper>
